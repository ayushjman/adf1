{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable5",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable6",
						"type": "DatasetReference"
					},
					"name": "sink4"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable7",
						"type": "DatasetReference"
					},
					"name": "sink5"
				}
			],
			"transformations": [
				{
					"name": "products"
				},
				{
					"name": "shipping"
				},
				{
					"name": "brands",
					"description": "create brands table"
				},
				{
					"name": "categories"
				}
			],
			"scriptLines": [
				"source(output(",
				"          category as string,",
				"          subCategory as string,",
				"          seriesCategoryCode as string,",
				"          seriesCategoryName as string,",
				"          seriesCode as string,",
				"          seriesName as string,",
				"          brandCode as string,",
				"          brandName as string,",
				"          imageUrl as string,",
				"          minStandardUnitPrice as string,",
				"          maxStandardUnitPrice as string,",
				"          minPricePerPiece as string,",
				"          maxPricePerPiece as string,",
				"          minStandardDaysToShip as string,",
				"          maxStandardDaysToShip as string,",
				"          stockItemFlag as string,",
				"          discontinuedProductFlag as string,",
				"          specialShipmentFlag as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 select(mapColumn(",
				"          category,",
				"          subCategory,",
				"          seriesCategoryCode,",
				"          seriesCategoryName,",
				"          seriesCode,",
				"          seriesName,",
				"          brandCode,",
				"          brandName,",
				"          stockItemFlag,",
				"          discontinuedProductFlag,",
				"          specialShipmentFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> products",
				"source1 select(mapColumn(",
				"          seriesCode,",
				"          brandCode,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> shipping",
				"source1 select(mapColumn(",
				"          brandCode,",
				"          brandName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> brands",
				"source1 select(mapColumn(",
				"          category,",
				"          subCategory,",
				"          seriesCode",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> categories",
				"products sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
				"shipping sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink3",
				"brands sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink4",
				"categories sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink5"
			]
		}
	}
}