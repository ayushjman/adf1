{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "sourceProduct",
					"description": "Import data from products table"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable9",
						"type": "DatasetReference"
					},
					"name": "sourcePricing"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "sourceProduct1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable5",
						"type": "DatasetReference"
					},
					"name": "sourceShipment"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable9",
						"type": "DatasetReference"
					},
					"name": "sourcePricing1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable10",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable14",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "join2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          category as string,",
				"          subCategory as string,",
				"          seriesCategoryCode as string,",
				"          seriesCategoryName as string,",
				"          seriesCode as string,",
				"          seriesName as string,",
				"          brandCode as string,",
				"          brandName as string,",
				"          stockItemFlag as string,",
				"          discontinuedProductFlag as string,",
				"          specialShipmentFlag as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sourceProduct",
				"source(output(",
				"          seriesCode as string,",
				"          seriesCategoryCode as string,",
				"          brandCode as string,",
				"          minStandardUnitPrice as string,",
				"          maxStandardUnitPrice as string,",
				"          minPricePerPiece as string,",
				"          maxPricePerPiece as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sourcePricing",
				"source(output(",
				"          category as string,",
				"          subCategory as string,",
				"          seriesCategoryCode as string,",
				"          seriesCategoryName as string,",
				"          seriesCode as string,",
				"          seriesName as string,",
				"          brandCode as string,",
				"          brandName as string,",
				"          stockItemFlag as string,",
				"          discontinuedProductFlag as string,",
				"          specialShipmentFlag as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sourceProduct1",
				"source(output(",
				"          seriesCode as string,",
				"          brandCode as string,",
				"          minStandardDaysToShip as string,",
				"          maxStandardDaysToShip as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sourceShipment",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sourcePricing1",
				"sourceProduct, sourcePricing join(sourceProduct@seriesCode == sourcePricing@seriesCode",
				"     && sourceProduct@seriesCategoryCode == sourcePricing@seriesCategoryCode,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"sourceProduct1, sourceShipment join(sourceProduct1@seriesCode == sourceShipment@seriesCode",
				"     && sourceProduct1@brandCode == sourceShipment@brandCode,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
				"join2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
			]
		}
	}
}